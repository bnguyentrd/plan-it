volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true

services:
  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_MULTIPLE_DATABASES: accounts, eventsdb, polls
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test-databases
    ports:
      - 15432:5432

  polls_service:
    build:
      context: ./polls_service
      dockerfile: ./Dockerfile.dev
    ports:
      - "8003:8000"
    volumes:
      - ./polls_service:/app
    environment:
      SIGNING_KEY: ${SIGNING_KEY}
      DATABASE_URL: postgresql://polls:password@postgres/polls
      WAIT_HOSTS: postgres:5432

  events_service:
    build:
      context: ./events_service
      dockerfile: ./Dockerfile.dev
    ports:
      - "8001:8000"
    volumes:
      - ./events_service:/app
    environment:
      SIGNING_KEY: ${SIGNING_KEY}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}
      PEXELS_API_KEY: ${PEXELS_API_KEY}
      DATABASE_URL: postgresql://admin:test-databases@postgres/eventsdb
      WAIT_HOSTS: postgres:5432
      WAIT_BEFORE: 5
      WAIT_TIMEOUT: 60

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_EVENTS_SERVICE: http://localhost:8090
      REACT_APP_ACCOUNTS_SERVICE_API_HOST: http://localhost:8000
      REACT_APP_POLLS_SERVICE_API_HOST: http://localhost:8003

  accounts_service:
    build:
      context: ./accounts_service
      dockerfile: ./Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./accounts_service:/app
    environment:
      DATABASE_URL: postgresql://accounts:password@postgres/accounts
      WAIT_HOSTS: postgres:5432
      SIGNING_KEY: ${SIGNING_KEY}
      WAIT_BEFORE: 5
      WAIT_TIMEOUT: 60

  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user@email.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1
